from django.db import models
from django.contrib.auth.models import User
class qusetion(models.Model):
    no=models.IntegerField(null=True)
    Yearop = (('1', '1st'),('2', '2nd'),('3', '3rd'),('4', '4th'),('M', 'Mtech'),)
    Year=models.CharField(max_length=1, choices=Yearop,default='1')
    event=models.CharField(max_length=100,default='gk')
    subject=models.CharField(max_length=50,null=True)
    data=models.CharField(max_length=1000,null=True)
    opt1=models.CharField(max_length=200,null=True)
    opt2=models.CharField(max_length=200,null=True)
    opt3=models.CharField(max_length=200,null=True)
    opt4=models.CharField(max_length=200,null=True)
    ans=models.IntegerField(null=True)
    class Meta:
        unique_together = ('Year', 'no','event',)
    def __str__(self):              # __unicode__ on Python 2
        return 'Question No '+str(self.no)
class userprof(models.Model):
    username=models.OneToOneField(User)
    Roll_No=models.CharField(max_length=40,null=True)
    Year=models.CharField(max_length=1, default='1')
    Score=models.IntegerField(null=True,default=0)
    time=models.IntegerField(null=True)
    set=models.IntegerField(blank=True,null=True)
    given=models.BooleanField(default=False)
    q1=models.IntegerField(default=0,null=True)
    q2=models.IntegerField(default=0,null=True)
    q3=models.IntegerField(default=0,null=True)
    q4=models.IntegerField(default=0,null=True)
    q5=models.IntegerField(default=0,null=True)
    q6=models.IntegerField(default=0,null=True)
    q7=models.IntegerField(default=0,null=True)
    q8=models.IntegerField(default=0,null=True)
    q9=models.IntegerField(default=0,null=True)
    q10=models.IntegerField(default=0,null=True)
    q11=models.IntegerField(default=0,null=True)
    q12=models.IntegerField(default=0,null=True)
    q13=models.IntegerField(default=0,null=True)
    q14=models.IntegerField(default=0,null=True)
    q15=models.IntegerField(default=0,null=True)
    q16=models.IntegerField(default=0,null=True)
    q17=models.IntegerField(default=0,null=True)
    q18=models.IntegerField(default=0,null=True)
    q19=models.IntegerField(default=0,null=True)
    q20=models.IntegerField(default=0,null=True)
    q21=models.IntegerField(default=0,null=True)
    q22=models.IntegerField(default=0,null=True)
    q23=models.IntegerField(default=0,null=True)
    q24=models.IntegerField(default=0,null=True)
    q25=models.IntegerField(default=0,null=True)
    q26=models.IntegerField(default=0,null=True)
    q27=models.IntegerField(default=0,null=True)
    q28=models.IntegerField(default=0,null=True)
    q29=models.IntegerField(default=0,null=True)
    q30=models.IntegerField(default=0,null=True)
    q31=models.IntegerField(default=0,null=True)
    q32=models.IntegerField(default=0,null=True)
    q33=models.IntegerField(default=0,null=True)
    q34=models.IntegerField(default=0,null=True)
    q35=models.IntegerField(default=0,null=True)
    q36=models.IntegerField(default=0,null=True)
    q37=models.IntegerField(default=0,null=True)
    q38=models.IntegerField(default=0,null=True)
    q39=models.IntegerField(default=0,null=True)
    q40=models.IntegerField(default=0,null=True)
    q41=models.IntegerField(default=0,null=True)
    q42=models.IntegerField(default=0,null=True)
    q43=models.IntegerField(default=0,null=True)
    q44=models.IntegerField(default=0,null=True)
    q45=models.IntegerField(default=0,null=True)
    q46=models.IntegerField(default=0,null=True)
    q47=models.IntegerField(default=0,null=True)
    q48=models.IntegerField(default=0,null=True)
    q49=models.IntegerField(default=0,null=True)
    q50=models.IntegerField(default=0,null=True)
    def __str__(self):              # __unicode__ on Python 2
        return str(self.username)
class sets(models.Model):
    no=models.IntegerField(null=True,unique=True)
    set2_val=models.IntegerField(blank=True,null=True)
    set3_val=models.IntegerField(blank=True,null=True)    
    def __str__(self):              # __unicode__ on Python 2
        return str(self.no)